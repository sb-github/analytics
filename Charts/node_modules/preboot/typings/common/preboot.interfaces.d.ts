export interface EventSelector {
    selector: string;
    events: [string];
    keyCodes?: [number];
    preventDefault?: boolean;
    freeze?: boolean;
    action?: Function;
    noReplay?: boolean;
}
export interface ServerClientRoot {
    serverSelector: string;
    serverNode?: HTMLElement;
    clientSelector?: string;
    clientNode?: HTMLElement;
}
export interface PrebootOptions {
    /** @deprecated minification has been removed in v6. Minification should be handled by the end-user */
    minify?: boolean;
    buffer?: boolean;
    eventSelectors?: EventSelector[];
    appRoot: string | string[];
    noReplay?: boolean;
}
export interface PrebootEvent {
    node: any;
    nodeKey?: any;
    event: DomEvent;
    name: string;
}
export interface DomEvent {
    which?: number;
    type?: string;
    target?: any;
    preventDefault(): void;
}
export interface PrebootAppData {
    root: ServerClientRoot;
    events: PrebootEvent[];
}
export interface PrebootEventListener {
    node: HTMLElement;
    eventName: string;
    handler: EventListener;
}
export interface PrebootSelection {
    start: number;
    end: number;
    direction: string;
}
export interface NodeContext {
    root: ServerClientRoot;
    node: Element;
    nodeKey?: string;
    selection?: PrebootSelection;
}
export interface PrebootData {
    opts?: PrebootOptions;
    overlay?: Element;
    activeNode?: NodeContext;
    apps?: PrebootAppData[];
    listeners?: PrebootEventListener[];
}
export interface PrebootWindow {
    prebootData: PrebootData;
    prebootStarted: boolean;
    getComputedStyle: (elt: Element, pseudoElt?: string) => CSSStyleDeclaration;
    document: Document;
}
